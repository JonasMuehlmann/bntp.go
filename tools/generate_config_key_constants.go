// Copyright Â© 2021-2022 Jonas Muehlmann
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

package main

import (
	"fmt"
	"os"
	"reflect"

	"github.com/JonasMuehlmann/bntp.go/internal/config"
	"github.com/stoewer/go-strcase"
)

func main() {
	reflectConfig := reflect.TypeOf(config.Config{})
	numFields := reflectConfig.NumField()
	fieldNames := make([]string, 0, numFields)

	for i := 0; i < numFields; i++ {
		fieldNames = append(fieldNames, reflectConfig.Field(i).Name)
	}

	code := `// THIS CODE IS GENERATED BY GO GENERATE

package config

const (
`

	for _, fieldName := range fieldNames {
		code += fmt.Sprintf("    %v = \"%v\"\n", strcase.UpperSnakeCase(fieldName), strcase.SnakeCase(fieldName))
	}

	code += ")"

	fileHandle, err := os.Create("internal/config/config_keys.go")
	if err != nil {
		panic(err)
	}

	_, err = fileHandle.WriteString(code)
	if err != nil {
		panic(err)
	}
}
